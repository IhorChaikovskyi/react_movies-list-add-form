{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","objMovie","setObjMovie","areAllFieldsFilledIn","obj","trim","onSubmit","preventDefault","prevState","disabled","App","moviesFromServer","movieArray","setNewMovie","newMovie","state","ReactDOM","render","document","getElementById"],"mappings":"oSAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,uBCKpC,IAAMC,EAA6B,SAAC,GAMpC,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,MAII,IAHJC,aAGI,MAHIF,EAGJ,MAFJG,gBAEI,aADJC,gBACI,MADO,WAAQ,EACf,EAEJ,EAAaC,oBAAS,2BAASL,EAAT,YAXfM,KAAKC,SAASC,WAAWC,MAAM,GAWhB,IAAfC,EAAP,oBAGA,EAA6BL,oBAAS,GAAtC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAWF,GAAWR,IAAaF,EAEzC,OACE,sBAAKd,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAASJ,EAAlC,SACGR,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACEuB,GAAIA,EACJ,0BAAkBV,GAClBb,UAAW4B,IAAW,QAAS,CAC7B,YAAaF,IAEfG,KAAK,OACLC,YAAW,gBAAWf,GACtBD,MAAOA,EACPG,SAAU,SAAAc,GAAK,OAAId,EAASc,EAAMC,OAAOlB,MAA1B,EACfmB,OAAQ,kBAAMR,GAAU,EAAhB,MAIXC,GACC,mBAAG1B,UAAU,iBAAb,mBAAkCe,EAAlC,oBAIP,EC/CYmB,EAA2B,SAAC,GAElC,IADLC,EACI,EADJA,MAIA,EAA0BjB,mBAAS,GAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAAgCnB,mBAAS,CACvCd,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KALV,mBAAO2B,EAAP,KAAiBC,EAAjB,KAQMC,EAAuB,SAACC,GAC5B,MACuB,KAArBA,EAAIrC,MAAMsC,QACe,KAAtBD,EAAI9B,OAAO+B,QACY,KAAvBD,EAAIlC,QAAQmC,QACU,KAAtBD,EAAIvC,OAAOwC,MAKjB,EAsBD,OACE,uBACE1C,UAAU,WAEV2C,SAxBa,SAACZ,GAChBA,EAAMa,iBAEFJ,EAAqBF,KAIzBD,EAASD,EAAQ,GAEjBG,EAAY,CACVnC,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KAGVwB,EAAMG,GACP,EAGC,UAKE,oBAAItC,UAAU,QAAd,yBACA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACND,MAAOwB,EAASlC,MAChBa,SAAU,SAAAb,GAAK,OAAImC,GACjB,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCzC,SAAhC,GADa,EAGfY,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,cACLE,MAAM,cACND,MAAOwB,EAASjC,YAChBY,SAAU,SAAAZ,GAAW,OAAIkC,GACvB,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCxC,eAAhC,GADmB,IAKvB,cAAC,EAAD,CACEQ,KAAK,SACLE,MAAM,YACND,MAAOwB,EAASpC,OAChBe,SAAU,SAAAf,GAAM,OAAIqC,GAClB,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgC3C,UAAhC,GADc,EAGhBc,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,UACLE,MAAM,WACND,MAAOwB,EAAS/B,QAChBU,SAAU,SAAAV,GAAO,OAAIgC,GACnB,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCtC,WAAhC,GADe,EAGjBS,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,SACLE,MAAM,UACND,MAAOwB,EAAS3B,OAChBM,SAAU,SAAAN,GAAM,OAAI4B,GAClB,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgClC,UAAhC,GADc,EAGhBK,UAAQ,IAGV,qBAAKhB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACE6B,KAAK,SACL,UAAQ,gBACR7B,UAAU,iBACV8C,SAAUN,EAAqBF,GAJjC,uBAvDCF,EAmEV,E,OCrHYW,EAAM,WACjB,MAAkC7B,mBAAS8B,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAOA,OACE,sBAAKlD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQwC,MAEtB,qBAAKjD,UAAU,UAAf,SACE,cAAC,EAAD,CACEmC,MAbiB,SAACgB,GACxBD,GAAY,SAAAE,GAAK,4BACXA,GADW,CACJD,GADI,GAGlB,QAcF,ECvBDE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.dee1791b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (currentState: Movie) => void,\n};\n\nexport const NewMovie:React.FC<Props> = ({\n  onAdd,\n}) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [objMovie, setObjMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const areAllFieldsFilledIn = (obj: Movie) => {\n    if (\n      obj.title.trim() === ''\n      || obj.imdbId.trim() === ''\n      || obj.imdbUrl.trim() === ''\n      || obj.imgUrl.trim() === '') {\n      return true;\n    }\n\n    return false;\n  };\n\n  const onSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    if (areAllFieldsFilledIn(objMovie)) {\n      return;\n    }\n\n    setCount(count + 1);\n\n    setObjMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    onAdd(objMovie);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={onSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={objMovie.title}\n        onChange={title => setObjMovie(\n          (prevState) => ({ ...prevState, title }),\n        )}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={objMovie.description}\n        onChange={description => setObjMovie(\n          (prevState) => ({ ...prevState, description }),\n        )}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={objMovie.imgUrl}\n        onChange={imgUrl => setObjMovie(\n          (prevState) => ({ ...prevState, imgUrl }),\n        )}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={objMovie.imdbUrl}\n        onChange={imdbUrl => setObjMovie(\n          (prevState) => ({ ...prevState, imdbUrl }),\n        )}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={objMovie.imdbId}\n        onChange={imdbId => setObjMovie(\n          (prevState) => ({ ...prevState, imdbId }),\n        )}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={areAllFieldsFilledIn(objMovie)}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movieArray, setNewMovie] = useState(moviesFromServer);\n  const newMovieFunction = (newMovie: Movie) => {\n    setNewMovie(state => (\n      [...state, newMovie]\n    ));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movieArray} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={newMovieFunction}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}